## 问题描述

- 普通的字符串是否相等的比较算法：
  - 先看两个字符串的长度是否相同，不相同则返回 false；
  - 如果长度相等，则**依次判断每个字符是否相等，不相等则返回 false**；
  - 如果全部相等，则返回 true。
- 问题：计时攻击。正常的字符串比较，一旦遇到不一样的字符就返回 false。理论上来说，前面有 2 个字符相同的字符串比较的耗时，要比前面有 10 个字符相同的比较要短。（几微妙）通过多次的重复，求出平均时间或总时间，**如果某个我们要尝试的字符串的时间比较长，我们就可以确定地得出这个这字符串的前面一段必然是正确的。**
- 用途：可用于 HMAC 攻击。



## 解决方法

- 通过 `res |= a.charAt(i) ^ b.charAt(i);` 全量比较，效率低但是安全。

- 字符比较函数

  ```java
  boolean safeEqual(String a, String b) {
      if (a.length() != b.length()) {
          return false;
      }
      int res = 0;
      for (int i = 0; i < a.length; i++) {
          res |= a.charAt(i) ^ b.charAt(i);
      }
      return res == 0;
  }
  ```

  